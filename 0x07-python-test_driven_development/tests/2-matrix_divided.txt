>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [1,2]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3],[4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix = None
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3],[4, 5, "Alx"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3],[4, 5, 1e400]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, "Alx")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided(matrix, 1e400)
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
